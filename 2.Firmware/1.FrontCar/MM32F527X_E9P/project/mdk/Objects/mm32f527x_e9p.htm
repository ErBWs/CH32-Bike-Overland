<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\mm32f527x_e9p.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\mm32f527x_e9p.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Tue Jan 31 20:31:22 2023
<BR><P>
<H3>Maximum Stack Usage =        728 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TIM6_IRQHandler &rArr; EasyUI &rArr; EasyUIDrawProgressBar &rArr; IPS114_ShowFloat &rArr; func_float_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[1]">Reset_Handler</a>
 <LI><a href="#[3]">HardFault_Handler</a>
 <LI><a href="#[1e]">ADC1_2_IRQHandler</a>
 <LI><a href="#[e]">BKP_TAMPER_IRQHandler</a>
 <LI><a href="#[5]">BusFault_Handler</a>
 <LI><a href="#[44]">COMP_IRQHandler</a>
 <LI><a href="#[9]">DebugMon_Handler</a>
 <LI><a href="#[188]">Default_Handler</a>
 <LI><a href="#[42]">ENET_IRQHandler</a>
 <LI><a href="#[43]">ENET_WKUP_IRQHandler</a>
 <LI><a href="#[10]">FLASH_IRQHandler</a>
 <LI><a href="#[20]">FlexCAN1_IRQHandler</a>
 <LI><a href="#[45]">FlexCAN2_IRQHandler</a>
 <LI><a href="#[29]">I2C1_IRQHandler</a>
 <LI><a href="#[2a]">I2C2_IRQHandler</a>
 <LI><a href="#[4d]">LPTIM_IRQHandler</a>
 <LI><a href="#[4e]">LPUART_IRQHandler</a>
 <LI><a href="#[4]">MemManage_Handler</a>
 <LI><a href="#[2]">NMI_Handler</a>
 <LI><a href="#[d]">PVD_IRQHandler</a>
 <LI><a href="#[a]">PendSV_Handler</a>
 <LI><a href="#[4c]">QSPI_IRQHandler</a>
 <LI><a href="#[11]">RCC_CRS_IRQHandler</a>
 <LI><a href="#[31]">RTC_ALR_IRQHandler</a>
 <LI><a href="#[f]">RTC_IRQHandler</a>
 <LI><a href="#[2b]">SPI1_IRQHandler</a>
 <LI><a href="#[2c]">SPI2_IRQHandler</a>
 <LI><a href="#[38]">SPI3_IRQHandler</a>
 <LI><a href="#[8]">SVC_Handler</a>
 <LI><a href="#[7]">SecureFault_Handler</a>
 <LI><a href="#[b]">SysTick_Handler</a>
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a>
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a>
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a>
 <LI><a href="#[33]">TIM8_BRK_IRQHandler</a>
 <LI><a href="#[36]">TIM8_CC_IRQHandler</a>
 <LI><a href="#[35]">TIM8_TRG_COM_IRQHandler</a>
 <LI><a href="#[46]">USB_FS_IRQHandler</a>
 <LI><a href="#[32]">USB_WKUP_IRQHandler</a>
 <LI><a href="#[6]">UsageFault_Handler</a>
 <LI><a href="#[c]">WWDG_IWDG_IRQHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[13a]">func_get_greatest_common_divisor</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13a]">func_get_greatest_common_divisor</a><BR>
 <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[1e]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[59]">debug_assert_handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[66]">gpio_init</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1e]">ADC1_2_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[e]">BKP_TAMPER_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[5]">BusFault_Handler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[44]">COMP_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[17]">DMA1_CH1_IRQHandler</a> from isr.o(.text.DMA1_CH1_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[18]">DMA1_CH2_IRQHandler</a> from isr.o(.text.DMA1_CH2_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[19]">DMA1_CH3_IRQHandler</a> from isr.o(.text.DMA1_CH3_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[1a]">DMA1_CH4_IRQHandler</a> from isr.o(.text.DMA1_CH4_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[1b]">DMA1_CH5_IRQHandler</a> from isr.o(.text.DMA1_CH5_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[1c]">DMA1_CH6_IRQHandler</a> from isr.o(.text.DMA1_CH6_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[1d]">DMA1_CH7_IRQHandler</a> from isr.o(.text.DMA1_CH7_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[1f]">DMA1_CH8_IRQHandler</a> from isr.o(.text.DMA1_CH8_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[3d]">DMA2_CH1_IRQHandler</a> from isr.o(.text.DMA2_CH1_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[3e]">DMA2_CH2_IRQHandler</a> from isr.o(.text.DMA2_CH2_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[3f]">DMA2_CH3_IRQHandler</a> from isr.o(.text.DMA2_CH3_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[40]">DMA2_CH4_IRQHandler</a> from isr.o(.text.DMA2_CH4_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[41]">DMA2_CH5_IRQHandler</a> from isr.o(.text.DMA2_CH5_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[47]">DMA2_CH6_IRQHandler</a> from isr.o(.text.DMA2_CH6_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[48]">DMA2_CH7_IRQHandler</a> from isr.o(.text.DMA2_CH7_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[49]">DMA2_CH8_IRQHandler</a> from isr.o(.text.DMA2_CH8_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[42]">ENET_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[43]">ENET_WKUP_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[12]">EXTI0_IRQHandler</a> from isr.o(.text.EXTI0_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[30]">EXTI15_10_IRQHandler</a> from isr.o(.text.EXTI15_10_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[13]">EXTI1_IRQHandler</a> from isr.o(.text.EXTI1_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[14]">EXTI2_IRQHandler</a> from isr.o(.text.EXTI2_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[15]">EXTI3_IRQHandler</a> from isr.o(.text.EXTI3_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[16]">EXTI4_IRQHandler</a> from isr.o(.text.EXTI4_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from isr.o(.text.EXTI9_5_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[51]">EasyKeyInit</a> from easy_key.o(.text.EasyKeyInit) referenced from easy_ui.o(.text.EasyUIInit)
 <LI><a href="#[5e]">EasyUIAddItem</a> from easy_ui.o(.text.EasyUIAddItem) referenced from easy_ui_user_app.o(.text.MenuInit)
 <LI><a href="#[5a]">EasyUIAddPage</a> from easy_ui.o(.text.EasyUIAddPage) referenced from easy_ui_user_app.o(.text.MenuInit)
 <LI><a href="#[60]">EasyUIEventChangeFloat</a> from easy_ui.o(.text.EasyUIEventChangeFloat) referenced from easy_ui_user_app.o(.text.MenuInit)
 <LI><a href="#[61]">EasyUIEventChangeUint</a> from easy_ui.o(.text.EasyUIEventChangeUint) referenced from easy_ui_user_app.o(.text.MenuInit)
 <LI><a href="#[64]">EasyUIEventResetSettings</a> from easy_ui.o(.text.EasyUIEventResetSettings) referenced from easy_ui_user_app.o(.text.MenuInit)
 <LI><a href="#[63]">EasyUIEventSaveSettings</a> from easy_ui.o(.text.EasyUIEventSaveSettings) referenced from easy_ui_user_app.o(.text.MenuInit)
 <LI><a href="#[62]">EventChangeBuzzerVolume</a> from easy_ui_user_app.o(.text.EventChangeBuzzerVolume) referenced from easy_ui_user_app.o(.text.MenuInit)
 <LI><a href="#[5f]">EventMainLoop</a> from easy_ui_user_app.o(.text.EventMainLoop) referenced from easy_ui_user_app.o(.text.MenuInit)
 <LI><a href="#[10]">FLASH_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[20]">FlexCAN1_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[45]">FlexCAN2_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[29]">I2C1_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[2a]">I2C2_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[55]">IPS114_DrawBox</a> from user_ips114.o(.text.IPS114_DrawBox) referenced from user_ips114.o(.text.IPS114_DrawRBox)
 <LI><a href="#[56]">IPS114_DrawCircle</a> from user_ips114.o(.text.IPS114_DrawCircle) referenced from user_ips114.o(.text.IPS114_DrawRFrame)
 <LI><a href="#[54]">IPS114_DrawDisc</a> from user_ips114.o(.text.IPS114_DrawDisc) referenced from user_ips114.o(.text.IPS114_DrawRBox)
 <LI><a href="#[53]">IPS114_DrawLine</a> from user_ips114.o(.text.IPS114_DrawLine) referenced from user_ips114.o(.text.IPS114_DrawDisc)
 <LI><a href="#[52]">IPS114_DrawPoint</a> from user_ips114.o(.text.IPS114_DrawPoint) referenced from user_ips114.o(.text.IPS114_DrawCircle)
 <LI><a href="#[50]">IPS114_ShowStr</a> from user_ips114.o(.text.IPS114_ShowStr) referenced from easy_ui.o(.text.EasyUIEventChangeFloat)
 <LI><a href="#[50]">IPS114_ShowStr</a> from user_ips114.o(.text.IPS114_ShowStr) referenced from easy_ui.o(.text.EasyUIEventChangeUint)
 <LI><a href="#[50]">IPS114_ShowStr</a> from user_ips114.o(.text.IPS114_ShowStr) referenced from easy_ui_user_app.o(.text.PageAbout)
 <LI><a href="#[4d]">LPTIM_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[4e]">LPUART_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[4]">MemManage_Handler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[d]">PVD_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[5d]">PageAbout</a> from easy_ui_user_app.o(.text.PageAbout) referenced from easy_ui_user_app.o(.text.MenuInit)
 <LI><a href="#[5b]">PageImage</a> from easy_ui_user_app.o(.text.PageImage) referenced from easy_ui_user_app.o(.text.MenuInit)
 <LI><a href="#[5c]">PageThreshold</a> from easy_ui_user_app.o(.text.PageThreshold) referenced from easy_ui_user_app.o(.text.MenuInit)
 <LI><a href="#[a]">PendSV_Handler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[4c]">QSPI_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[11]">RCC_CRS_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[31]">RTC_ALR_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[f]">RTC_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[2b]">SPI1_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[2c]">SPI2_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[38]">SPI3_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[7]">SecureFault_Handler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from isr.o(.text.TIM1_UP_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from isr.o(.text.TIM2_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from isr.o(.text.TIM3_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from isr.o(.text.TIM4_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[37]">TIM5_IRQHandler</a> from isr.o(.text.TIM5_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[3b]">TIM6_IRQHandler</a> from isr.o(.text.TIM6_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[3c]">TIM7_IRQHandler</a> from isr.o(.text.TIM7_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[33]">TIM8_BRK_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[36]">TIM8_CC_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[35]">TIM8_TRG_COM_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[34]">TIM8_UP_IRQHandler</a> from isr.o(.text.TIM8_UP_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[2d]">UART1_IRQHandler</a> from isr.o(.text.UART1_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[2e]">UART2_IRQHandler</a> from isr.o(.text.UART2_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[2f]">UART3_IRQHandler</a> from isr.o(.text.UART3_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[39]">UART4_IRQHandler</a> from isr.o(.text.UART4_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[3a]">UART5_IRQHandler</a> from isr.o(.text.UART5_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[4a]">UART6_IRQHandler</a> from isr.o(.text.UART6_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[4b]">UART7_IRQHandler</a> from isr.o(.text.UART7_IRQHandler) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[46]">USB_FS_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[32]">USB_WKUP_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[6]">UsageFault_Handler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[c]">WWDG_IWDG_IRQHandler</a> from startup_mm32f5277e.o(.text) referenced from startup_mm32f5277e.o(RESET)
 <LI><a href="#[6e]">_sputc</a> from printf3.o(i._sputc) referenced from printf3.o(i.__0sprintf$3)
 <LI><a href="#[59]">debug_assert_handler</a> from zf_common_debug.o(.text.debug_assert_handler) referenced from user_ips114.o(.text.IPS114_ShowFloat)
 <LI><a href="#[59]">debug_assert_handler</a> from zf_common_debug.o(.text.debug_assert_handler) referenced from zf_device_ips114.o(.text.ips114_set_region)
 <LI><a href="#[59]">debug_assert_handler</a> from zf_common_debug.o(.text.debug_assert_handler) referenced from zf_driver_spi.o(.text.spi_init)
 <LI><a href="#[65]">debug_uart_str_output</a> from zf_common_debug.o(.text.debug_uart_str_output) referenced from zf_common_debug.o(.text.debug_init)
 <LI><a href="#[66]">gpio_init</a> from zf_driver_gpio.o(.text.gpio_init) referenced from zf_device_ips114.o(.text.ips114_init)
 <LI><a href="#[69]">ips114_clear</a> from zf_device_ips114.o(.text.ips114_clear) referenced from zf_device_ips114.o(.text.ips114_init)
 <LI><a href="#[6a]">ips114_show_string</a> from zf_device_ips114.o(.text.ips114_show_string) referenced from zf_device_ips114.o(.text.ips114_init)
 <LI><a href="#[57]">ips114_write_index</a> from user_ips114.o(.text.ips114_write_index) referenced from user_ips114.o(.text.IPS114_SendBuffer)
 <LI><a href="#[6b]">ips114_write_index</a> from zf_device_ips114.o(.text.ips114_write_index) referenced from zf_device_ips114.o(.text.ips114_set_region)
 <LI><a href="#[4f]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[6d]">soft_iic_send_data</a> from zf_driver_soft_iic.o(.text.soft_iic_send_data) referenced from zf_driver_soft_iic.o(.text.soft_iic_write_8bit_register)
 <LI><a href="#[6c]">soft_iic_write_8bit_register</a> from zf_driver_soft_iic.o(.text.soft_iic_write_8bit_register) referenced from zf_device_mpu6050.o(.text.mpu6050_init)
 <LI><a href="#[58]">spi_write_16bit</a> from zf_driver_spi.o(.text.spi_write_16bit) referenced from user_ips114.o(.text.IPS114_SendBuffer)
 <LI><a href="#[58]">spi_write_16bit</a> from zf_driver_spi.o(.text.spi_write_16bit) referenced from zf_device_ips114.o(.text.ips114_set_region)
 <LI><a href="#[68]">spi_write_8bit</a> from zf_driver_spi.o(.text.spi_write_8bit) referenced from zf_device_ips114.o(.text.ips114_init)
 <LI><a href="#[67]">system_delay_ms</a> from zf_driver_delay.o(.text.system_delay_ms) referenced from zf_device_ips114.o(.text.ips114_init)
 <LI><a href="#[0]">type_default_callback</a> from zf_device_type.o(.text.type_default_callback) referenced 6 times from zf_device_type.o(.data..L_MergedGlobals)
 <LI><a href="#[0]">type_default_callback</a> from zf_device_type.o(.text.type_default_callback) referenced 2 times from zf_device_type.o(.data.wireless_module_uart_handler)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6f]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[182]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[70]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[85]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[183]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[184]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[185]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[186]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[187]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 24 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = Reset_Handler &rArr; SystemInit &rArr; clock_init
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>BKP_TAMPER_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>COMP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[188]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>ENET_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>ENET_WKUP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>FLASH_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>FlexCAN1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>FlexCAN2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>LPTIM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>LPUART_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PVD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>QSPI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>RTC_ALR_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>SPI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SecureFault_Handler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>USB_FS_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USB_WKUP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WWDG_IWDG_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, startup_mm32f5277e.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[124]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>

<P><STRONG><a name="[152]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
</UL>

<P><STRONG><a name="[189]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[f9]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_buffer_clear
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_26
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowFloat
</UL>

<P><STRONG><a name="[18a]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_clear
</UL>

<P><STRONG><a name="[dd]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ClearBuffer
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowFloat
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIAddItem
</UL>

<P><STRONG><a name="[75]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[b1]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageThreshold
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawProgressBar
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawIndicator
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawMsgBox
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
</UL>

<P><STRONG><a name="[157]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageThreshold
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
</UL>

<P><STRONG><a name="[7c]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
</UL>

<P><STRONG><a name="[120]"></a>__aeabi_dcmple</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, dcmple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_dcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_26
</UL>

<P><STRONG><a name="[a6]"></a>__aeabi_dcmplt</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, dcmplt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_dcmplt
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[a5]"></a>__aeabi_dcmpge</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, dcmpge.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_dcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_27
</UL>

<P><STRONG><a name="[12a]"></a>__aeabi_dcmpgt</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, dcmpgt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_dcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>

<P><STRONG><a name="[bf]"></a>__aeabi_dcmpeq</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, dcmpeq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_dcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
</UL>

<P><STRONG><a name="[7e]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageThreshold
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageThreshold
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[18b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[181]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[18c]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[18d]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[18e]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[190]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[79]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[84]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[71]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[191]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[192]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[193]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[17]"></a>DMA1_CH1_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA1_CH1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_CH1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_CH2_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA1_CH2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_CH2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_CH3_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA1_CH3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_CH3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_CH4_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, isr.o(.text.DMA1_CH4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_CH4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_CH5_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA1_CH5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_CH5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_CH6_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA1_CH6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_CH6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_CH7_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA1_CH7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_CH7_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_CH8_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA1_CH8_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_CH8_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_CH1_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA2_CH1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_CH1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_CH2_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA2_CH2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_CH2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_CH3_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA2_CH3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_CH3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_CH4_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA2_CH4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_CH4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_CH5_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA2_CH5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_CH5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_CH6_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA2_CH6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_CH6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_CH7_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA2_CH7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_CH7_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA2_CH8_IRQHandler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, isr.o(.text.DMA2_CH8_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2_CH8_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>DMA_ClearChannelInterruptStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_dma.o(.text.DMA_ClearChannelInterruptStatus))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH8_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH7_IRQHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH6_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH5_IRQHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH4_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH3_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH2_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH1_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH8_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH7_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH6_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH5_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH4_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH3_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH2_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH1_IRQHandler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>

<P><STRONG><a name="[114]"></a>DMA_GetChannelInterruptStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_dma.o(.text.DMA_GetChannelInterruptStatus))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>

<P><STRONG><a name="[d1]"></a>DoubleToInt</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, user_flash.o(.text.DoubleToInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DoubleToInt
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventSaveSettings
</UL>

<P><STRONG><a name="[12]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.EXTI0_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearLineStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, isr.o(.text.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI15_10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearLineStatus
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.EXTI1_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearLineStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.EXTI2_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearLineStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.EXTI3_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearLineStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.EXTI4_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearLineStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, isr.o(.text.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI9_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearLineStatus
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>EXTI_ClearLineStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_exti.o(.text.EXTI_ClearLineStatus))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[128]"></a>EXTI_GetLineStatus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_exti.o(.text.EXTI_GetLineStatus))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>

<P><STRONG><a name="[94]"></a>EasyKeyHandler</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, easy_key.o(.text.EasyKeyHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EasyKeyHandler &rArr; SyncValue
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReleaseCallback
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MultiClickCallback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HoldCallback
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PressCallback
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncValue
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[51]"></a>EasyKeyInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, easy_key.o(.text.EasyKeyInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = EasyKeyInit &rArr; gpio_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easy_ui.o(.text.EasyUIInit)
</UL>
<P><STRONG><a name="[9a]"></a>EasyUI</STRONG> (Thumb, 896 bytes, Stack size 112 bytes, easy_ui.o(.text.EasyUI))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = EasyUI &rArr; EasyUIDrawProgressBar &rArr; IPS114_ShowFloat &rArr; func_float_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUITransitionAnim
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCheckbox
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUISyncOpnValue
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ClearBuffer
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ModifyColor
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmplt
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowFloat
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawProgressBar
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawIndicator
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIGetItemPos
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowStr
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawMsgBox
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIBackgroundBlur
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SendBuffer
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_26
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_27
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[5e]"></a>EasyUIAddItem</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, easy_ui.o(.text.EasyUIAddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = EasyUIAddItem
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easy_ui_user_app.o(.text.MenuInit)
</UL>
<P><STRONG><a name="[5a]"></a>EasyUIAddPage</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, easy_ui.o(.text.EasyUIAddPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = EasyUIAddPage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easy_ui_user_app.o(.text.MenuInit)
</UL>
<P><STRONG><a name="[ac]"></a>EasyUIBackgroundBlur</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, easy_ui.o(.text.EasyUIBackgroundBlur))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EasyUIBackgroundBlur &rArr; IPS114_SendBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SendBuffer
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventChangeBuzzerVolume
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventMainLoop
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventResetSettings
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventSaveSettings
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawMsgBox
</UL>

<P><STRONG><a name="[a1]"></a>EasyUIDrawIndicator</STRONG> (Thumb, 468 bytes, Stack size 48 bytes, easy_ui.o(.text.EasyUIDrawIndicator))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = EasyUIDrawIndicator &rArr; IPS114_DrawRBox
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SetDrawColor
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRBox
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[ad]"></a>EasyUIDrawMsgBox</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, easy_ui.o(.text.EasyUIDrawMsgBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EasyUIDrawMsgBox &rArr; IPS114_DrawRBox
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SetDrawColor
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowStr
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRBox
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRFrame
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIBackgroundBlur
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[9e]"></a>EasyUIDrawProgressBar</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, easy_ui.o(.text.EasyUIDrawProgressBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = EasyUIDrawProgressBar &rArr; IPS114_ShowFloat &rArr; func_float_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowFloat
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawBox
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawFrame
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowStr
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SendBuffer
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[60]"></a>EasyUIEventChangeFloat</STRONG> (Thumb, 752 bytes, Stack size 56 bytes, easy_ui.o(.text.EasyUIEventChangeFloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = EasyUIEventChangeFloat &rArr; OUTLINED_FUNCTION_4 &rArr; IPS114_ShowFloat &rArr; func_float_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpeq
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawBox
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowStr
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRFrame
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIBackgroundBlur
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SendBuffer
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_28
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_33
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easy_ui_user_app.o(.text.MenuInit)
</UL>
<P><STRONG><a name="[61]"></a>EasyUIEventChangeUint</STRONG> (Thumb, 552 bytes, Stack size 40 bytes, easy_ui.o(.text.EasyUIEventChangeUint))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = EasyUIEventChangeUint &rArr; OUTLINED_FUNCTION_4 &rArr; IPS114_ShowFloat &rArr; func_float_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmplt
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SetDrawColor
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRFrame
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIBackgroundBlur
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SendBuffer
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_32
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_31
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_29
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easy_ui_user_app.o(.text.MenuInit)
</UL>
<P><STRONG><a name="[64]"></a>EasyUIEventResetSettings</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, easy_ui.o(.text.EasyUIEventResetSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EasyUIEventResetSettings &rArr; EasyUIBackgroundBlur &rArr; IPS114_SendBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIBackgroundBlur
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easy_ui_user_app.o(.text.MenuInit)
</UL>
<P><STRONG><a name="[63]"></a>EasyUIEventSaveSettings</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, easy_ui.o(.text.EasyUIEventSaveSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = EasyUIEventSaveSettings &rArr; flash_write_page_from_buffer &rArr; flash_erase_page &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_buffer_clear
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_page_from_buffer
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoubleToInt
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIBackgroundBlur
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easy_ui_user_app.o(.text.MenuInit)
</UL>
<P><STRONG><a name="[a2]"></a>EasyUIGetItemPos</STRONG> (Thumb, 188 bytes, Stack size 20 bytes, easy_ui.o(.text.EasyUIGetItemPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EasyUIGetItemPos
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[d4]"></a>EasyUIInit</STRONG> (Thumb, 300 bytes, Stack size 56 bytes, easy_ui.o(.text.EasyUIInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = EasyUIInit &rArr; ips114_init &rArr; spi_init &rArr; afio_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_page_to_buffer
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_check
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowBMP
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ClearBuffer
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ModifyColor
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntToDouble
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowStr
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SendBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9b]"></a>EasyUISyncOpnValue</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, easy_ui.o(.text.EasyUISyncOpnValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EasyUISyncOpnValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[a0]"></a>EasyUITransitionAnim</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, easy_ui.o(.text.EasyUITransitionAnim))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EasyUITransitionAnim &rArr; IPS114_SendBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SendBuffer
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[62]"></a>EventChangeBuzzerVolume</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, easy_ui_user_app.o(.text.EventChangeBuzzerVolume))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EventChangeBuzzerVolume &rArr; OUTLINED_FUNCTION_6 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIBackgroundBlur
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easy_ui_user_app.o(.text.MenuInit)
</UL>
<P><STRONG><a name="[5f]"></a>EventMainLoop</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, easy_ui_user_app.o(.text.EventMainLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EventMainLoop &rArr; EasyUIBackgroundBlur &rArr; IPS114_SendBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIBackgroundBlur
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easy_ui_user_app.o(.text.MenuInit)
</UL>
<P><STRONG><a name="[135]"></a>GPIO_Init</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, hal_gpio.o(.text.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[136]"></a>GPIO_PinAFConf</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, hal_gpio.o(.text.GPIO_PinAFConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConf
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[98]"></a>HoldCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, easy_key.o(.text.HoldCallback))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyHandler
</UL>

<P><STRONG><a name="[9f]"></a>IPS114_ClearBuffer</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, user_ips114.o(.text.IPS114_ClearBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IPS114_ClearBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageAbout
</UL>

<P><STRONG><a name="[55]"></a>IPS114_DrawBox</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, user_ips114.o(.text.IPS114_DrawBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IPS114_DrawBox
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageAbout
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawProgressBar
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_ips114.o(.text.IPS114_DrawRBox)
</UL>
<P><STRONG><a name="[aa]"></a>IPS114_DrawCheckbox</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, user_ips114.o(.text.IPS114_DrawCheckbox))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = IPS114_DrawCheckbox &rArr; IPS114_DrawRBox
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRBox
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[56]"></a>IPS114_DrawCircle</STRONG> (Thumb, 480 bytes, Stack size 64 bytes, user_ips114.o(.text.IPS114_DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = IPS114_DrawCircle &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_22
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_ips114.o(.text.IPS114_DrawRFrame)
</UL>
<P><STRONG><a name="[54]"></a>IPS114_DrawDisc</STRONG> (Thumb, 752 bytes, Stack size 72 bytes, user_ips114.o(.text.IPS114_DrawDisc))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = IPS114_DrawDisc &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawLine
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_25
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_23
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_ips114.o(.text.IPS114_DrawRBox)
</UL>
<P><STRONG><a name="[b8]"></a>IPS114_DrawFrame</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, user_ips114.o(.text.IPS114_DrawFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IPS114_DrawFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawProgressBar
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
</UL>

<P><STRONG><a name="[53]"></a>IPS114_DrawLine</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, user_ips114.o(.text.IPS114_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IPS114_DrawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_27
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_ips114.o(.text.IPS114_DrawDisc)
</UL>
<P><STRONG><a name="[52]"></a>IPS114_DrawPoint</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, user_ips114.o(.text.IPS114_DrawPoint))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUITransitionAnim
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowGrayImage
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawLine
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_12
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_21
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_20
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_27
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowBMP
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawBox
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawFrame
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRFrame
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_ips114.o(.text.IPS114_DrawCircle)
</UL>
<P><STRONG><a name="[b4]"></a>IPS114_DrawRBox</STRONG> (Thumb, 220 bytes, Stack size 64 bytes, user_ips114.o(.text.IPS114_DrawRBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = IPS114_DrawRBox
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageAbout
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageThreshold
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageImage
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCheckbox
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawIndicator
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawMsgBox
</UL>

<P><STRONG><a name="[b5]"></a>IPS114_DrawRFrame</STRONG> (Thumb, 200 bytes, Stack size 56 bytes, user_ips114.o(.text.IPS114_DrawRFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = IPS114_DrawRFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_24
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCheckbox
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawMsgBox
</UL>

<P><STRONG><a name="[9c]"></a>IPS114_ModifyColor</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, user_ips114.o(.text.IPS114_ModifyColor))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[ae]"></a>IPS114_SendBuffer</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, user_ips114.o(.text.IPS114_SendBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IPS114_SendBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUITransitionAnim
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawProgressBar
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIBackgroundBlur
</UL>

<P><STRONG><a name="[b3]"></a>IPS114_SetDrawColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_ips114.o(.text.IPS114_SetDrawColor))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageAbout
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageThreshold
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageImage
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawIndicator
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawMsgBox
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
</UL>

<P><STRONG><a name="[d9]"></a>IPS114_ShowBMP</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, user_ips114.o(.text.IPS114_ShowBMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IPS114_ShowBMP
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageAbout
</UL>

<P><STRONG><a name="[fd]"></a>IPS114_ShowChar</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, user_ips114.o(.text.IPS114_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IPS114_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowStr
</UL>

<P><STRONG><a name="[ab]"></a>IPS114_ShowFloat</STRONG> (Thumb, 196 bytes, Stack size 64 bytes, user_ips114.o(.text.IPS114_ShowFloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = IPS114_ShowFloat &rArr; func_float_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;func_float_to_str
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageThreshold
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawProgressBar
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>

<P><STRONG><a name="[fc]"></a>IPS114_ShowGrayImage</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, user_ips114.o(.text.IPS114_ShowGrayImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IPS114_ShowGrayImage
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageThreshold
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageImage
</UL>

<P><STRONG><a name="[50]"></a>IPS114_ShowStr</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, user_ips114.o(.text.IPS114_ShowStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = IPS114_ShowStr &rArr; IPS114_ShowChar
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageAbout
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageThreshold
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawProgressBar
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawMsgBox
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_14
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_30
</UL>
<BR>[Address Reference Count : 3]<UL><LI> easy_ui.o(.text.EasyUIEventChangeUint)
<LI> easy_ui.o(.text.EasyUIEventChangeFloat)
<LI> easy_ui_user_app.o(.text.PageAbout)
</UL>
<P><STRONG><a name="[fe]"></a>IPS114_ShowUint</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, user_ips114.o(.text.IPS114_ShowUint))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = IPS114_ShowUint &rArr; func_uint_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;func_uint_to_str
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_26
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageImage
</UL>

<P><STRONG><a name="[d8]"></a>IntToDouble</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_flash.o(.text.IntToDouble))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIInit
</UL>

<P><STRONG><a name="[177]"></a>LPTIM_Init</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, hal_lptim.o(.text.LPTIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPTIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_ms
</UL>

<P><STRONG><a name="[101]"></a>MenuInit</STRONG> (Thumb, 668 bytes, Stack size 48 bytes, easy_ui_user_app.o(.text.MenuInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MenuInit
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>MultiClickCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, easy_key.o(.text.MultiClickCallback))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyHandler
</UL>

<P><STRONG><a name="[5d]"></a>PageAbout</STRONG> (Thumb, 284 bytes, Stack size 56 bytes, easy_ui_user_app.o(.text.PageAbout))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = PageAbout &rArr; IPS114_DrawRBox
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowBMP
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ClearBuffer
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawBox
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SetDrawColor
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowStr
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easy_ui_user_app.o(.text.MenuInit)
</UL>
<P><STRONG><a name="[5b]"></a>PageImage</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, easy_ui_user_app.o(.text.PageImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = PageImage &rArr; IPS114_ShowUint &rArr; func_uint_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowGrayImage
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowUint
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SetDrawColor
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easy_ui_user_app.o(.text.MenuInit)
</UL>
<P><STRONG><a name="[5c]"></a>PageThreshold</STRONG> (Thumb, 272 bytes, Stack size 48 bytes, easy_ui_user_app.o(.text.PageThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = PageThreshold &rArr; IPS114_ShowFloat &rArr; func_float_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_6
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowGrayImage
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowFloat
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SetDrawColor
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowStr
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRBox
</UL>
<BR>[Address Reference Count : 1]<UL><LI> easy_ui_user_app.o(.text.MenuInit)
</UL>
<P><STRONG><a name="[97]"></a>PressCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, easy_key.o(.text.PressCallback))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyHandler
</UL>

<P><STRONG><a name="[10f]"></a>RCC_EnableAHB1Periphs</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_rcc.o(.text.RCC_EnableAHB1Periphs))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[174]"></a>RCC_EnableAPB1Periphs</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_rcc.o(.text.RCC_EnableAPB1Periphs))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clock_enable
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[10d]"></a>RCC_EnableAPB2Periphs</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_rcc.o(.text.RCC_EnableAPB2Periphs))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clock_enable
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[12d]"></a>RCC_ResetAPB2Periphs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_rcc.o(.text.RCC_ResetAPB2Periphs))
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_ms
</UL>

<P><STRONG><a name="[96]"></a>ReleaseCallback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, easy_key.o(.text.ReleaseCallback))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyHandler
</UL>

<P><STRONG><a name="[175]"></a>SPI_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_spi.o(.text.SPI_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[12f]"></a>SPI_InitMaster</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, hal_spi.o(.text.SPI_InitMaster))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_InitMaster
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[95]"></a>SyncValue</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, easy_key.o(.text.SyncValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SyncValue
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyHandler
</UL>

<P><STRONG><a name="[72]"></a>SystemInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, system_mm32f5277e.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SystemInit &rArr; clock_init
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(.text.TIM1_UP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM1_UP_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearInterruptStatus
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, isr.o(.text.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetInterruptStatus
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearInterruptStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(.text.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearInterruptStatus
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(.text.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearInterruptStatus
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM5_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(.text.TIM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearInterruptStatus
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, isr.o(.text.TIM6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = TIM6_IRQHandler &rArr; EasyUI &rArr; EasyUIDrawProgressBar &rArr; IPS114_ShowFloat &rArr; func_float_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyHandler
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearInterruptStatus
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(.text.TIM7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM7_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearInterruptStatus
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, isr.o(.text.TIM8_UP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM8_UP_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearInterruptStatus
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[167]"></a>TIM_ClearCounterValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_tim.o(.text.TIM_ClearCounterValue))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_enable
</UL>

<P><STRONG><a name="[133]"></a>TIM_ClearInterruptStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_tim.o(.text.TIM_ClearInterruptStatus))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_IRQHandler
</UL>

<P><STRONG><a name="[16b]"></a>TIM_EnableInterrupts</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_tim.o(.text.TIM_EnableInterrupts))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
</UL>

<P><STRONG><a name="[118]"></a>TIM_GetInterruptStatus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_tim.o(.text.TIM_GetInterruptStatus))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
</UL>

<P><STRONG><a name="[16a]"></a>TIM_Init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, hal_tim.o(.text.TIM_Init))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
</UL>

<P><STRONG><a name="[166]"></a>TIM_Start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_tim.o(.text.TIM_Start))
<BR><BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_enable
</UL>

<P><STRONG><a name="[2d]"></a>UART1_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, isr.o(.text.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearInterruptStatus
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>UART2_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, isr.o(.text.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearInterruptStatus
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>UART3_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, isr.o(.text.UART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearInterruptStatus
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART4_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, isr.o(.text.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = UART4_IRQHandler &rArr; gps_uart_callback &rArr; fifo_read_buffer &rArr; OUTLINED_FUNCTION_0 &rArr; fifo_used &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearInterruptStatus
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART5_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, isr.o(.text.UART5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearInterruptStatus
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>UART6_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, isr.o(.text.UART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART6_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearInterruptStatus
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>UART7_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, isr.o(.text.UART7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART7_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearInterruptStatus
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f5277e.o(RESET)
</UL>
<P><STRONG><a name="[127]"></a>UART_ClearInterruptStatus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_uart.o(.text.UART_ClearInterruptStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_IRQHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>

<P><STRONG><a name="[179]"></a>UART_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_uart.o(.text.UART_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[17b]"></a>UART_GetData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_uart.o(.text.UART_GetData))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query_byte
</UL>

<P><STRONG><a name="[122]"></a>UART_GetInterruptStatus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_uart.o(.text.UART_GetInterruptStatus))
<BR><BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>

<P><STRONG><a name="[17a]"></a>UART_GetStatus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_uart.o(.text.UART_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query_byte
</UL>

<P><STRONG><a name="[178]"></a>UART_Init</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, hal_uart.o(.text.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[17d]"></a>UART_PutData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_uart.o(.text.UART_PutData))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
</UL>

<P><STRONG><a name="[12c]"></a>afio_init</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, zf_driver_gpio.o(.text.afio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = afio_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConf
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
</UL>

<P><STRONG><a name="[132]"></a>clock_init</STRONG> (Thumb, 624 bytes, Stack size 48 bytes, zf_common_clock.o(.text.clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = clock_init
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_init
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;func_get_greatest_common_divisor
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[59]"></a>debug_assert_handler</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, zf_common_debug.o(.text.debug_assert_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + In Cycle
<LI>Call Chain = debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_disable
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_data
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_start
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_stop
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_send_data
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_page_from_buffer
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_page_to_buffer
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_check
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_ms
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;func_float_to_str
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;func_uint_to_str
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_used
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_clear
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_string
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_show_string
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_show_char
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query_byte
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_registers
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_register
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_write_8bit_register
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowUint
</UL>
<BR>[Address Reference Count : 3]<UL><LI> zf_device_ips114.o(.text.ips114_set_region)
<LI> zf_driver_spi.o(.text.spi_init)
<LI> user_ips114.o(.text.IPS114_ShowFloat)
</UL>
<P><STRONG><a name="[140]"></a>debug_init</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, zf_common_debug.o(.text.debug_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = debug_init &rArr; uart_init &rArr; afio_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[143]"></a>debug_log_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, zf_common_debug.o(.text.debug_log_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = debug_log_handler &rArr; debug_output &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
</UL>

<P><STRONG><a name="[141]"></a>debug_output_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_common_debug.o(.text.debug_output_init))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
</UL>

<P><STRONG><a name="[15d]"></a>debug_output_struct_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, zf_common_debug.o(.text.debug_output_struct_init))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
</UL>

<P><STRONG><a name="[14b]"></a>fifo_clear</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, zf_common_fifo.o(.text.fifo_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = fifo_clear &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
</UL>

<P><STRONG><a name="[14c]"></a>fifo_read_buffer</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, zf_common_fifo.o(.text.fifo_read_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = fifo_read_buffer &rArr; OUTLINED_FUNCTION_0 &rArr; fifo_used &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_end_offset
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
</UL>

<P><STRONG><a name="[10b]"></a>fifo_used</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, zf_common_fifo.o(.text.fifo_used))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = fifo_used &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
</UL>

<P><STRONG><a name="[150]"></a>fifo_write_buffer</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, zf_common_fifo.o(.text.fifo_write_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = fifo_write_buffer &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_head_offset
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
</UL>

<P><STRONG><a name="[d3]"></a>flash_buffer_clear</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, zf_driver_flash.o(.text.flash_buffer_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_buffer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventSaveSettings
</UL>

<P><STRONG><a name="[d6]"></a>flash_check</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, zf_driver_flash.o(.text.flash_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = flash_check &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_page_from_buffer
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIInit
</UL>

<P><STRONG><a name="[153]"></a>flash_erase_page</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, zf_driver_flash.o(.text.flash_erase_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = flash_erase_page &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_enable
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_disable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_page_from_buffer
</UL>

<P><STRONG><a name="[d7]"></a>flash_read_page_to_buffer</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, zf_driver_flash.o(.text.flash_read_page_to_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = flash_read_page_to_buffer &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIInit
</UL>

<P><STRONG><a name="[d2]"></a>flash_write_page_from_buffer</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, zf_driver_flash.o(.text.flash_write_page_from_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = flash_write_page_from_buffer &rArr; flash_erase_page &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_check
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_disable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventSaveSettings
</UL>

<P><STRONG><a name="[fa]"></a>func_float_to_str</STRONG> (Thumb, 296 bytes, Stack size 88 bytes, zf_common_function.o(.text.func_float_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = func_float_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowFloat
</UL>

<P><STRONG><a name="[13a]"></a>func_get_greatest_common_divisor</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_common_function.o(.text.func_get_greatest_common_divisor))
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;func_get_greatest_common_divisor
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;func_get_greatest_common_divisor
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[100]"></a>func_uint_to_str</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, zf_common_function.o(.text.func_uint_to_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = func_uint_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowUint
</UL>

<P><STRONG><a name="[131]"></a>gpio_get_level</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zf_driver_gpio.o(.text.gpio_get_level))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_data
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_send_data
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncValue
</UL>

<P><STRONG><a name="[66]"></a>gpio_init</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, zf_driver_gpio.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = gpio_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConf
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_set_level
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyKeyInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_ips114.o(.text.ips114_init)
</UL>
<P><STRONG><a name="[155]"></a>gpio_set_level</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, zf_driver_gpio.o(.text.gpio_set_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_set_level
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[134]"></a>gps_uart_callback</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, zf_device_gps_tau1201.o(.text.gps_uart_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = gps_uart_callback &rArr; fifo_read_buffer &rArr; OUTLINED_FUNCTION_0 &rArr; fifo_used &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_used
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_clear
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query_byte
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[16c]"></a>interrupt_enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text.interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
</UL>

<P><STRONG><a name="[13e]"></a>interrupt_global_disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text.interrupt_global_disable))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_page_from_buffer
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>

<P><STRONG><a name="[113]"></a>interrupt_global_enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text.interrupt_global_enable))
<BR><BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
</UL>

<P><STRONG><a name="[13d]"></a>interrupt_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text.interrupt_init))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[69]"></a>ips114_clear</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, zf_device_ips114.o(.text.ips114_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ips114_clear &rArr; ips114_set_region
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_set_region
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_ips114.o(.text.ips114_init)
</UL>
<P><STRONG><a name="[d5]"></a>ips114_init</STRONG> (Thumb, 600 bytes, Stack size 64 bytes, zf_device_ips114.o(.text.ips114_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = ips114_init &rArr; spi_init &rArr; afio_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output_init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output_struct_init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_clear
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIInit
</UL>

<P><STRONG><a name="[15f]"></a>ips114_show_char</STRONG> (Thumb, 324 bytes, Stack size 48 bytes, zf_device_ips114.o(.text.ips114_show_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = ips114_show_char &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_set_region
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_show_string
</UL>

<P><STRONG><a name="[6a]"></a>ips114_show_string</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, zf_device_ips114.o(.text.ips114_show_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = ips114_show_string &rArr; ips114_show_char &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_show_char
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_ips114.o(.text.ips114_init)
</UL>
<P><STRONG><a name="[4f]"></a>main</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = main &rArr; EasyUIInit &rArr; ips114_init &rArr; spi_init &rArr; afio_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_acc
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUITransitionAnim
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIInit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_init
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[162]"></a>mpu6050_get_acc</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, zf_device_mpu6050.o(.text.mpu6050_get_acc))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = mpu6050_get_acc &rArr; OUTLINED_FUNCTION_0 &rArr; soft_iic_read_8bit_registers &rArr; OUTLINED_FUNCTION_17 &rArr; soft_iic_read_data &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[160]"></a>mpu6050_init</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, zf_device_mpu6050.o(.text.mpu6050_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = mpu6050_init &rArr; soft_iic_init &rArr; gpio_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_ms
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_log_handler
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_init
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_register
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_write_8bit_register
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[165]"></a>pit_enable</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, zf_driver_pit.o(.text.pit_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pit_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearCounterValue
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
</UL>

<P><STRONG><a name="[161]"></a>pit_init</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, zf_driver_pit.o(.text.pit_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = pit_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_EnableInterrupts
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_enable
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_funciton_check
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clock_enable
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_enable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[163]"></a>soft_iic_init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, zf_driver_soft_iic.o(.text.soft_iic_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = soft_iic_init &rArr; gpio_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_19
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
</UL>

<P><STRONG><a name="[164]"></a>soft_iic_read_8bit_register</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, zf_driver_soft_iic.o(.text.soft_iic_read_8bit_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = soft_iic_read_8bit_register &rArr; OUTLINED_FUNCTION_5 &rArr; soft_iic_read_data &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_7
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
</UL>

<P><STRONG><a name="[111]"></a>soft_iic_read_8bit_registers</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, zf_driver_soft_iic.o(.text.soft_iic_read_8bit_registers))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = soft_iic_read_8bit_registers &rArr; OUTLINED_FUNCTION_17 &rArr; soft_iic_read_data &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_15
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_16
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_stop
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
</UL>

<P><STRONG><a name="[6c]"></a>soft_iic_write_8bit_register</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, zf_driver_soft_iic.o(.text.soft_iic_write_8bit_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = soft_iic_write_8bit_register &rArr; soft_iic_stop &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_18
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_stop
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_mpu6050.o(.text.mpu6050_init)
</UL>
<P><STRONG><a name="[15b]"></a>spi_init</STRONG> (Thumb, 320 bytes, Stack size 64 bytes, zf_driver_spi.o(.text.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = spi_init &rArr; afio_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB1Periphs
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2Periphs
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Enable
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_InitMaster
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
</UL>

<P><STRONG><a name="[58]"></a>spi_write_16bit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, zf_driver_spi.o(.text.spi_write_16bit))
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SendBuffer
</UL>
<BR>[Address Reference Count : 2]<UL><LI> zf_device_ips114.o(.text.ips114_set_region)
<LI> user_ips114.o(.text.IPS114_SendBuffer)
</UL>
<P><STRONG><a name="[68]"></a>spi_write_8bit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zf_driver_spi.o(.text.spi_write_8bit))
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_write_index
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_write_index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_ips114.o(.text.ips114_init)
</UL>
<P><STRONG><a name="[67]"></a>system_delay_ms</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, zf_driver_delay.o(.text.system_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = system_delay_ms &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM_Init
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ResetAPB2Periphs
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_ips114.o(.text.ips114_init)
</UL>
<P><STRONG><a name="[169]"></a>timer_clock_enable</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, zf_driver_timer.o(.text.timer_clock_enable))
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB1Periphs
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2Periphs
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
</UL>

<P><STRONG><a name="[168]"></a>timer_funciton_check</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zf_driver_timer.o(.text.timer_funciton_check))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
</UL>

<P><STRONG><a name="[142]"></a>uart_init</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, zf_driver_uart.o(.text.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = uart_init &rArr; afio_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB1Periphs
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2Periphs
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Enable
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_init
</UL>

<P><STRONG><a name="[156]"></a>uart_query_byte</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, zf_driver_uart.o(.text.uart_query_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = uart_query_byte &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetData
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
</UL>

<P><STRONG><a name="[17c]"></a>uart_write_byte</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, zf_driver_uart.o(.text.uart_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_write_byte
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetStatus
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_PutData
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_string
</UL>

<P><STRONG><a name="[14a]"></a>uart_write_string</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, zf_driver_uart.o(.text.uart_write_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = uart_write_string &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_uart_str_output
</UL>

<P><STRONG><a name="[17e]"></a>__0sprintf$3</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[194]"></a>__1sprintf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)

<P><STRONG><a name="[144]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output
</UL>

<P><STRONG><a name="[e0]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[195]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[196]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[197]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[180]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[117]"></a>OUTLINED_FUNCTION_11</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_11))
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_IRQHandler
</UL>

<P><STRONG><a name="[121]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_IRQHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[126]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_IRQHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_IRQHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[93]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetLineStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[86]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetChannelInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH8_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH7_IRQHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH6_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH5_IRQHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH4_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH3_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH2_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH1_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH8_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH7_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH6_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH5_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH4_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH3_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH2_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH1_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH8_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH7_IRQHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH6_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH5_IRQHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH4_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH3_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH2_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH1_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH8_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH7_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH6_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH5_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH4_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH3_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH2_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH1_IRQHandler
</UL>

<P><STRONG><a name="[88]"></a>OUTLINED_FUNCTION_10</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_10))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetChannelInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH1_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH1_IRQHandler
</UL>

<P><STRONG><a name="[89]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearChannelInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH8_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH7_IRQHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH6_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH5_IRQHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH4_IRQHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH3_IRQHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH2_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH1_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH8_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH7_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH6_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH5_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH4_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH3_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH2_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH1_IRQHandler
</UL>

<P><STRONG><a name="[8b]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetChannelInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH2_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH2_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>OUTLINED_FUNCTION_13</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_13))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetChannelInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH3_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH3_IRQHandler
</UL>

<P><STRONG><a name="[8d]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetChannelInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH4_IRQHandler
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH4_IRQHandler
</UL>

<P><STRONG><a name="[8e]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetChannelInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH5_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH5_IRQHandler
</UL>

<P><STRONG><a name="[8f]"></a>OUTLINED_FUNCTION_14</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_14))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetChannelInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH6_IRQHandler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH6_IRQHandler
</UL>

<P><STRONG><a name="[90]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetChannelInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH7_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH7_IRQHandler
</UL>

<P><STRONG><a name="[91]"></a>OUTLINED_FUNCTION_12</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr.o(.text.OUTLINED_FUNCTION_12))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetChannelInterruptStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_CH8_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_CH8_IRQHandler
</UL>

<P><STRONG><a name="[137]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, zf_common_clock.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[138]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zf_common_clock.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[139]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, zf_common_clock.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[13b]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zf_common_clock.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[13c]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, zf_common_clock.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[13f]"></a>debug_output</STRONG> (Thumb, 492 bytes, Stack size 368 bytes, zf_common_debug.o(.text.debug_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = debug_output &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_0
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_2
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_1
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_4
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_log_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>

<P><STRONG><a name="[145]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, zf_common_debug.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output
</UL>

<P><STRONG><a name="[146]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, zf_common_debug.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output
</UL>

<P><STRONG><a name="[147]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_common_debug.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output
</UL>

<P><STRONG><a name="[148]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_common_debug.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output
</UL>

<P><STRONG><a name="[149]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, zf_common_debug.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output
</UL>

<P><STRONG><a name="[65]"></a>debug_uart_str_output</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zf_common_debug.o(.text.debug_uart_str_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = debug_uart_str_output &rArr; uart_write_string &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_common_debug.o(.text.debug_init)
</UL>
<P><STRONG><a name="[151]"></a>fifo_head_offset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_common_fifo.o(.text.fifo_head_offset))
<BR><BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
</UL>

<P><STRONG><a name="[123]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, zf_common_fifo.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
</UL>

<P><STRONG><a name="[10a]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, zf_common_fifo.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; fifo_used &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_used
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
</UL>

<P><STRONG><a name="[14d]"></a>fifo_end_offset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_common_fifo.o(.text.fifo_end_offset))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
</UL>

<P><STRONG><a name="[14e]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_common_fifo.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
</UL>

<P><STRONG><a name="[14f]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, zf_common_fifo.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_read_buffer
</UL>

<P><STRONG><a name="[10c]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_driver_delay.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2Periphs
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay_ms
</UL>

<P><STRONG><a name="[154]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_driver_flash.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_page_from_buffer
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_page_to_buffer
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_page
</UL>

<P><STRONG><a name="[112]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_driver_flash.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_page_from_buffer
</UL>

<P><STRONG><a name="[10e]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zf_driver_gpio.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAHB1Periphs
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>

<P><STRONG><a name="[125]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = OUTLINED_FUNCTION_3 &rArr; soft_iic_start &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_start
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_register
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_write_8bit_register
</UL>

<P><STRONG><a name="[6d]"></a>soft_iic_send_data</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, zf_driver_soft_iic.o(.text.soft_iic_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = soft_iic_send_data &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_driver_soft_iic.o(.text.soft_iic_write_8bit_register)
</UL>
<P><STRONG><a name="[11a]"></a>soft_iic_stop</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, zf_driver_soft_iic.o(.text.soft_iic_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = soft_iic_stop &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_13
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_registers
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_write_8bit_register
</UL>

<P><STRONG><a name="[116]"></a>soft_iic_start</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, zf_driver_soft_iic.o(.text.soft_iic_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = soft_iic_start &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_10
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_3
</UL>

<P><STRONG><a name="[11b]"></a>OUTLINED_FUNCTION_16</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = OUTLINED_FUNCTION_16 &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_registers
</UL>

<P><STRONG><a name="[16d]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_register
</UL>

<P><STRONG><a name="[172]"></a>OUTLINED_FUNCTION_18</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_18))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_write_8bit_register
</UL>

<P><STRONG><a name="[11e]"></a>OUTLINED_FUNCTION_19</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_19))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = OUTLINED_FUNCTION_19 &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_init
</UL>

<P><STRONG><a name="[115]"></a>OUTLINED_FUNCTION_10</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_10))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = OUTLINED_FUNCTION_10 &rArr; soft_iic_start &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_start
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_registers
</UL>

<P><STRONG><a name="[129]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = OUTLINED_FUNCTION_5 &rArr; soft_iic_read_data &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_register
</UL>

<P><STRONG><a name="[119]"></a>OUTLINED_FUNCTION_13</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_13))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = OUTLINED_FUNCTION_13 &rArr; soft_iic_stop &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_register
</UL>

<P><STRONG><a name="[11d]"></a>soft_iic_read_data</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, zf_driver_soft_iic.o(.text.soft_iic_read_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = soft_iic_read_data &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_8
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_11
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_get_level
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_17
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_5
</UL>

<P><STRONG><a name="[170]"></a>OUTLINED_FUNCTION_11</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_11))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_data
</UL>

<P><STRONG><a name="[171]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_data
</UL>

<P><STRONG><a name="[16e]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_register
</UL>

<P><STRONG><a name="[16f]"></a>OUTLINED_FUNCTION_15</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_15))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_registers
</UL>

<P><STRONG><a name="[11c]"></a>OUTLINED_FUNCTION_17</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_driver_soft_iic.o(.text.OUTLINED_FUNCTION_17))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = OUTLINED_FUNCTION_17 &rArr; soft_iic_read_data &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_registers
</UL>

<P><STRONG><a name="[176]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zf_driver_spi.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_8bit
</UL>

<P><STRONG><a name="[173]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, zf_driver_spi.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[12b]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zf_driver_spi.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = OUTLINED_FUNCTION_8 &rArr; afio_init &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[158]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zf_device_ips114.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_show_char
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_clear
</UL>

<P><STRONG><a name="[159]"></a>ips114_set_region</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, zf_device_ips114.o(.text.ips114_set_region))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ips114_set_region
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OUTLINED_FUNCTION_9
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_show_char
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_clear
</UL>

<P><STRONG><a name="[11f]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, zf_device_ips114.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_show_char
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_clear
</UL>

<P><STRONG><a name="[15a]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zf_device_ips114.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_clear
</UL>

<P><STRONG><a name="[15e]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, zf_device_ips114.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_set_region
</UL>

<P><STRONG><a name="[6b]"></a>ips114_write_index</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, zf_device_ips114.o(.text.ips114_write_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ips114_write_index
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_8bit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_ips114.o(.text.ips114_set_region)
</UL>
<P><STRONG><a name="[15c]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zf_device_ips114.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ips114_show_char
</UL>

<P><STRONG><a name="[110]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, zf_device_mpu6050.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; soft_iic_read_8bit_registers &rArr; OUTLINED_FUNCTION_17 &rArr; soft_iic_read_data &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;soft_iic_read_8bit_registers
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mpu6050_get_acc
</UL>

<P><STRONG><a name="[0]"></a>type_default_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, zf_device_type.o(.text.type_default_callback))
<BR>[Address Reference Count : 2]<UL><LI> zf_device_type.o(.data.wireless_module_uart_handler)
<LI> zf_device_type.o(.data..L_MergedGlobals)
</UL>
<P><STRONG><a name="[12e]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_rcc.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ResetAPB2Periphs
</UL>

<P><STRONG><a name="[130]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal_spi.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_InitMaster
</UL>

<P><STRONG><a name="[b0]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUITransitionAnim
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIBackgroundBlur
</UL>

<P><STRONG><a name="[b6]"></a>OUTLINED_FUNCTION_19</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_19))
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SetDrawColor
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawMsgBox
</UL>

<P><STRONG><a name="[b2]"></a>OUTLINED_FUNCTION_22</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_22))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawProgressBar
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawIndicator
</UL>

<P><STRONG><a name="[9d]"></a>OUTLINED_FUNCTION_11</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_11))
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_SetDrawColor
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawProgressBar
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawIndicator
</UL>

<P><STRONG><a name="[b7]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawProgressBar
</UL>

<P><STRONG><a name="[b9]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIDrawProgressBar
</UL>

<P><STRONG><a name="[c7]"></a>OUTLINED_FUNCTION_29</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_29))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[ba]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OUTLINED_FUNCTION_8 &rArr; IPS114_DrawFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[bb]"></a>OUTLINED_FUNCTION_15</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_15))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OUTLINED_FUNCTION_15 &rArr; IPS114_DrawBox
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawBox
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[c8]"></a>OUTLINED_FUNCTION_16</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_16))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[c9]"></a>OUTLINED_FUNCTION_24</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_24))
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[ca]"></a>OUTLINED_FUNCTION_31</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_31))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[cb]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OUTLINED_FUNCTION_5 &rArr; IPS114_DrawBox
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawBox
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[cc]"></a>OUTLINED_FUNCTION_17</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_17))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_17 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[cd]"></a>OUTLINED_FUNCTION_32</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_32))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[bd]"></a>OUTLINED_FUNCTION_25</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_25))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_25 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[be]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OUTLINED_FUNCTION_6 &rArr; IPS114_DrawBox
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawBox
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[c2]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = OUTLINED_FUNCTION_4 &rArr; IPS114_ShowFloat &rArr; func_float_to_str &rArr; debug_assert_handler &rArr;  gpio_init (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowFloat
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[ce]"></a>OUTLINED_FUNCTION_30</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_30))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OUTLINED_FUNCTION_30 &rArr; IPS114_ShowStr &rArr; IPS114_ShowChar
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowStr
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[cf]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[c3]"></a>OUTLINED_FUNCTION_10</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_10))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[c4]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[c5]"></a>OUTLINED_FUNCTION_12</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_12))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[c6]"></a>OUTLINED_FUNCTION_20</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_20))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[d0]"></a>OUTLINED_FUNCTION_21</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_21))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeUint
</UL>

<P><STRONG><a name="[bc]"></a>OUTLINED_FUNCTION_33</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_33))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
</UL>

<P><STRONG><a name="[c0]"></a>OUTLINED_FUNCTION_13</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_13))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OUTLINED_FUNCTION_13 &rArr; __aeabi_dcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
</UL>

<P><STRONG><a name="[c1]"></a>OUTLINED_FUNCTION_28</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_28))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OUTLINED_FUNCTION_28 &rArr; __aeabi_dcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUIEventChangeFloat
</UL>

<P><STRONG><a name="[a3]"></a>OUTLINED_FUNCTION_14</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_14))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OUTLINED_FUNCTION_14 &rArr; IPS114_ShowStr &rArr; IPS114_ShowChar
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowStr
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[a4]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OUTLINED_FUNCTION_2 &rArr; IPS114_ShowStr &rArr; IPS114_ShowChar
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowStr
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[a7]"></a>OUTLINED_FUNCTION_27</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_27))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OUTLINED_FUNCTION_27 &rArr; __aeabi_dcmpge
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[a8]"></a>OUTLINED_FUNCTION_26</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_26))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OUTLINED_FUNCTION_26 &rArr; __aeabi_dcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[a9]"></a>OUTLINED_FUNCTION_18</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, easy_ui.o(.text.OUTLINED_FUNCTION_18))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OUTLINED_FUNCTION_18 &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EasyUI
</UL>

<P><STRONG><a name="[57]"></a>ips114_write_index</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, user_ips114.o(.text.ips114_write_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ips114_write_index
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_8bit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_ips114.o(.text.IPS114_SendBuffer)
</UL>
<P><STRONG><a name="[f7]"></a>OUTLINED_FUNCTION_27</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_27))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawLine
</UL>

<P><STRONG><a name="[ff]"></a>OUTLINED_FUNCTION_26</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_26))
<BR><BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowUint
</UL>

<P><STRONG><a name="[fb]"></a>OUTLINED_FUNCTION_11</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_11))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OUTLINED_FUNCTION_11 &rArr; IPS114_ShowStr &rArr; IPS114_ShowChar
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowStr
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowUint
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_ShowFloat
</UL>

<P><STRONG><a name="[de]"></a>OUTLINED_FUNCTION_10</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_10))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_10 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[df]"></a>OUTLINED_FUNCTION_22</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_22))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_22 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[e1]"></a>OUTLINED_FUNCTION_14</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_14))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OUTLINED_FUNCTION_14 &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[e2]"></a>OUTLINED_FUNCTION_20</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_20))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[e3]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[e4]"></a>OUTLINED_FUNCTION_18</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_18))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[e5]"></a>OUTLINED_FUNCTION_17</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_17))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[e6]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[e7]"></a>OUTLINED_FUNCTION_21</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_21))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[e8]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[e9]"></a>OUTLINED_FUNCTION_16</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_16))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[ea]"></a>OUTLINED_FUNCTION_19</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_19))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawCircle
</UL>

<P><STRONG><a name="[eb]"></a>OUTLINED_FUNCTION_23</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_23))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_23 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
</UL>

<P><STRONG><a name="[ec]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OUTLINED_FUNCTION_9 &rArr; IPS114_DrawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
</UL>

<P><STRONG><a name="[ed]"></a>OUTLINED_FUNCTION_15</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_15))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OUTLINED_FUNCTION_15 &rArr; IPS114_DrawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
</UL>

<P><STRONG><a name="[ee]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRFrame
</UL>

<P><STRONG><a name="[ef]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OUTLINED_FUNCTION_0 &rArr; IPS114_DrawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
</UL>

<P><STRONG><a name="[f0]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OUTLINED_FUNCTION_1 &rArr; IPS114_DrawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
</UL>

<P><STRONG><a name="[f1]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OUTLINED_FUNCTION_7 &rArr; IPS114_DrawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
</UL>

<P><STRONG><a name="[f2]"></a>OUTLINED_FUNCTION_13</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_13))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
</UL>

<P><STRONG><a name="[f3]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
</UL>

<P><STRONG><a name="[f4]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
</UL>

<P><STRONG><a name="[f5]"></a>OUTLINED_FUNCTION_12</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_12))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
</UL>

<P><STRONG><a name="[f6]"></a>OUTLINED_FUNCTION_25</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_25))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawDisc
</UL>

<P><STRONG><a name="[f8]"></a>OUTLINED_FUNCTION_24</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, user_ips114.o(.text.OUTLINED_FUNCTION_24))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPS114_DrawRFrame
</UL>

<P><STRONG><a name="[da]"></a>OUTLINED_FUNCTION_6</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, easy_ui_user_app.o(.text.OUTLINED_FUNCTION_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OUTLINED_FUNCTION_6 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageThreshold
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventChangeBuzzerVolume
</UL>

<P><STRONG><a name="[db]"></a>OUTLINED_FUNCTION_2</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, easy_ui_user_app.o(.text.OUTLINED_FUNCTION_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OUTLINED_FUNCTION_2 &rArr; __aeabi_dcmplt
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmplt
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageThreshold
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventChangeBuzzerVolume
</UL>

<P><STRONG><a name="[dc]"></a>OUTLINED_FUNCTION_5</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, easy_ui_user_app.o(.text.OUTLINED_FUNCTION_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OUTLINED_FUNCTION_5 &rArr; __aeabi_dcmpgt
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpgt
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PageThreshold
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventChangeBuzzerVolume
</UL>

<P><STRONG><a name="[102]"></a>OUTLINED_FUNCTION_0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, easy_ui_user_app.o(.text.OUTLINED_FUNCTION_0))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[103]"></a>OUTLINED_FUNCTION_7</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, easy_ui_user_app.o(.text.OUTLINED_FUNCTION_7))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[104]"></a>OUTLINED_FUNCTION_4</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, easy_ui_user_app.o(.text.OUTLINED_FUNCTION_4))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[105]"></a>OUTLINED_FUNCTION_8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, easy_ui_user_app.o(.text.OUTLINED_FUNCTION_8))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[106]"></a>OUTLINED_FUNCTION_9</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, easy_ui_user_app.o(.text.OUTLINED_FUNCTION_9))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[107]"></a>OUTLINED_FUNCTION_3</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, easy_ui_user_app.o(.text.OUTLINED_FUNCTION_3))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[108]"></a>OUTLINED_FUNCTION_1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, easy_ui_user_app.o(.text.OUTLINED_FUNCTION_1))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[109]"></a>OUTLINED_FUNCTION_10</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, easy_ui_user_app.o(.text.OUTLINED_FUNCTION_10))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuInit
</UL>

<P><STRONG><a name="[17f]"></a>_printf_core</STRONG> (Thumb, 436 bytes, Stack size 96 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>

<P><STRONG><a name="[6e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf3.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0sprintf$3)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
