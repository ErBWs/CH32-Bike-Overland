<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\mm32f327x_g9p.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\mm32f327x_g9p.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6120001: Last Updated: Wed Nov 16 20:49:30 2022
<BR><P>
<H3>Maximum Stack Usage =        488 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; mt9v03x_init &rArr; camera_init &rArr; timer_etr_init &rArr; debug_assert_handler &rArr; __2sprintf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[6a]">get_greatest_common_divisor</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6a]">get_greatest_common_divisor</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[35]">ADC3_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[1e]">CAN1_RX_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[43]">COMP1_2_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from isr.o(.text.DMA1_Channel1_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from isr.o(.text.DMA1_Channel2_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from isr.o(.text.DMA1_Channel3_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from isr.o(.text.DMA1_Channel4_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from isr.o(.text.DMA1_Channel5_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from isr.o(.text.DMA1_Channel6_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from isr.o(.text.DMA1_Channel7_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3d]">DMA2_Channel1_IRQHandler</a> from isr.o(.text.DMA2_Channel1_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3e]">DMA2_Channel2_IRQHandler</a> from isr.o(.text.DMA2_Channel2_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel3_IRQHandler</a> from isr.o(.text.DMA2_Channel3_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[40]">DMA2_Channel4_IRQHandler</a> from isr.o(.text.DMA2_Channel4_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[41]">DMA2_Channel5_IRQHandler</a> from isr.o(.text.DMA2_Channel5_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[42]">ETH_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from isr.o(.text.EXTI0_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2e]">EXTI15_10_IRQHandler</a> from isr.o(.text.EXTI15_10_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from isr.o(.text.EXTI1_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from isr.o(.text.EXTI2_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from isr.o(.text.EXTI3_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from isr.o(.text.EXTI4_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[1f]">EXTI9_5_IRQHandler</a> from isr.o(.text.EXTI9_5_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[1d]">FlashCache_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[27]">I2C1_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[28]">I2C2_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[44]">OTG_FS_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[30]">OTG_FS_WKUP_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[f]">RCC_CRS_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2f]">RTCAlarm_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[36]">SDIO_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[29]">SPI1_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2a]">SPI2_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[38]">SPI3_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[49]">SystemInit</a> from system_mm32f3277g.o(.text.SystemInit) referenced from startup_mm32f3277g.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[20]">TIM1_BRK_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[23]">TIM1_CC_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[22]">TIM1_TRG_COM_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[21]">TIM1_UP_IRQHandler</a> from isr.o(.text.TIM1_UP_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[24]">TIM2_IRQHandler</a> from isr.o(.text.TIM2_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[25]">TIM3_IRQHandler</a> from isr.o(.text.TIM3_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[26]">TIM4_IRQHandler</a> from isr.o(.text.TIM4_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[37]">TIM5_IRQHandler</a> from isr.o(.text.TIM5_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3b]">TIM6_IRQHandler</a> from isr.o(.text.TIM6_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3c]">TIM7_IRQHandler</a> from isr.o(.text.TIM7_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[31]">TIM8_BRK_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[34]">TIM8_CC_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[33]">TIM8_TRG_COM_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[32]">TIM8_UP_IRQHandler</a> from isr.o(.text.TIM8_UP_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2b]">UART1_IRQHandler</a> from isr.o(.text.UART1_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2c]">UART2_IRQHandler</a> from isr.o(.text.UART2_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[2d]">UART3_IRQHandler</a> from isr.o(.text.UART3_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[39]">UART4_IRQHandler</a> from isr.o(.text.UART4_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[3a]">UART5_IRQHandler</a> from isr.o(.text.UART5_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[45]">UART6_IRQHandler</a> from isr.o(.text.UART6_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[46]">UART7_IRQHandler</a> from isr.o(.text.UART7_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[47]">UART8_IRQHandler</a> from isr.o(.text.UART8_IRQHandler) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_mm32f3277g.o(.text) referenced from startup_mm32f3277g.o(RESET)
 <LI><a href="#[4a]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32f3277g.o(.text)
 <LI><a href="#[51]">_sputc</a> from printf3.o(i._sputc) referenced from printf3.o(i.__0sprintf$3)
 <LI><a href="#[4f]">debug_assert_handler</a> from zf_common_debug.o(.text.debug_assert_handler) referenced from zf_device_tft180.o(.text.tft180_set_region)
 <LI><a href="#[4b]">debug_uart_str_output</a> from zf_common_debug.o(.text.debug_uart_str_output) referenced from zf_common_debug.o(.text.debug_init)
 <LI><a href="#[4e]">gpio_set_level</a> from zf_driver_gpio.o(.text.gpio_set_level) referenced from main.o(.text.main)
 <LI><a href="#[48]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[50]">spi_write_8bit</a> from zf_driver_spi.o(.text.spi_write_8bit) referenced from zf_device_tft180.o(.text.tft180_set_region)
 <LI><a href="#[4d]">system_delay</a> from zf_driver_delay.o(.text.system_delay) referenced from main.o(.text.main)
 <LI><a href="#[4c]">tft180_show_string</a> from zf_device_tft180.o(.text.tft180_show_string) referenced from main.o(.text.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(.text)
</UL>
<P><STRONG><a name="[90]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[52]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[57]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[91]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[92]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[93]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[94]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[95]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>COMP1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FlashCache_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32f3277g.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
</UL>

<P><STRONG><a name="[96]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[6d]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[53]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[9b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text.DMA1_Channel1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text.DMA1_Channel2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text.DMA1_Channel3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, isr.o(.text.DMA1_Channel4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel4_IRQHandler &rArr; camera_dma_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_dma_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text.DMA1_Channel5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text.DMA1_Channel6_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text.DMA1_Channel7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text.DMA2_Channel1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text.DMA2_Channel2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text.DMA2_Channel3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text.DMA2_Channel4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, isr.o(.text.DMA2_Channel5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, isr.o(.text.EXTI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, isr.o(.text.EXTI15_10_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, isr.o(.text.EXTI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, isr.o(.text.EXTI2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, isr.o(.text.EXTI3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, isr.o(.text.EXTI4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, isr.o(.text.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI9_5_IRQHandler &rArr; camera_vsync_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_vsync_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SystemInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_mm32f3277g.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; clock_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text.TIM1_UP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM2_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text.TIM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM3_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text.TIM3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM4_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text.TIM4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM5_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text.TIM5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text.TIM6_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text.TIM7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, isr.o(.text.TIM8_UP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM8_UP_IRQHandler &rArr; tsl1401_collect_pit_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsl1401_collect_pit_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>UART1_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, isr.o(.text.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>UART2_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, isr.o(.text.UART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>UART3_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, isr.o(.text.UART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART3_IRQHandler &rArr; gps_uart_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART4_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, isr.o(.text.UART4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UART5_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, isr.o(.text.UART5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>UART6_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, isr.o(.text.UART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART6_IRQHandler &rArr; wireless_module_uart_handler &rArr; bluetooth_ch9141_uart_callback &rArr; fifo_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_module_uart_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>UART7_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, isr.o(.text.UART7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UART8_IRQHandler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, isr.o(.text.UART8_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART8_IRQHandler &rArr; camera_uart_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_uart_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32f3277g.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>adc_convert</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, zf_driver_adc.o(.text.adc_convert))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tsl1401_collect_pit_handler
</UL>

<P><STRONG><a name="[88]"></a>afio_init</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, zf_driver_gpio.o(.text.afio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_etr_init
</UL>

<P><STRONG><a name="[5f]"></a>bluetooth_ch9141_uart_callback</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, zf_device_bluetooth_ch9141.o(.text.bluetooth_ch9141_uart_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bluetooth_ch9141_uart_callback &rArr; fifo_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_module_uart_handler
</UL>

<P><STRONG><a name="[58]"></a>camera_dma_handler</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, zf_device_type.o(.text.camera_dma_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = camera_dma_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler
</UL>

<P><STRONG><a name="[63]"></a>camera_init</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, zf_device_camera.o(.text.camera_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = camera_init &rArr; timer_etr_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_set_priority
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_camera_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_etr_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[5e]"></a>camera_uart_handler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, zf_device_type.o(.text.camera_uart_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = camera_uart_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART8_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>camera_vsync_handler</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, zf_device_type.o(.text.camera_vsync_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = camera_vsync_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_set_count
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_enable
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[5a]"></a>clock_init</STRONG> (Thumb, 492 bytes, Stack size 24 bytes, zf_common_clock.o(.text.clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = clock_init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_greatest_common_divisor
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4f]"></a>debug_assert_handler</STRONG> (Thumb, 616 bytes, Stack size 368 bytes, zf_common_debug.o(.text.debug_assert_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_disable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_gray_image
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_etr_init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_char
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_tft180.o(.text.tft180_set_region)
</UL>
<P><STRONG><a name="[70]"></a>debug_init</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, zf_common_debug.o(.text.debug_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = debug_init &rArr; uart_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_output_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>debug_output_init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, zf_common_debug.o(.text.debug_output_init))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_init
</UL>

<P><STRONG><a name="[65]"></a>dma_camera_init</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, zf_driver_dma.o(.text.dma_camera_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dma_camera_init
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[62]"></a>dma_disable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_driver_dma.o(.text.dma_disable))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_vsync_handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_dma_handler
</UL>

<P><STRONG><a name="[69]"></a>dma_enable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_driver_dma.o(.text.dma_enable))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_vsync_handler
</UL>

<P><STRONG><a name="[68]"></a>dma_set_count</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zf_driver_dma.o(.text.dma_set_count))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_vsync_handler
</UL>

<P><STRONG><a name="[67]"></a>exti_init</STRONG> (Thumb, 336 bytes, Stack size 24 bytes, zf_driver_exti.o(.text.exti_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = exti_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[77]"></a>fifo_head_offset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_common_fifo.o(.text.fifo_head_offset))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
</UL>

<P><STRONG><a name="[61]"></a>fifo_write_buffer</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, zf_common_fifo.o(.text.fifo_write_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fifo_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_enable
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_head_offset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_global_disable
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_uart_callback
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_callback
</UL>

<P><STRONG><a name="[6a]"></a>get_greatest_common_divisor</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, zf_common_function.o(.text.get_greatest_common_divisor))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_greatest_common_divisor
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_greatest_common_divisor
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[75]"></a>gpio_init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, zf_driver_gpio.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
</UL>

<P><STRONG><a name="[4e]"></a>gpio_set_level</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, zf_driver_gpio.o(.text.gpio_set_level))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[5c]"></a>gps_uart_callback</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, zf_device_gps_tau1201.o(.text.gps_uart_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gps_uart_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query_byte
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>interrupt_disable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text.interrupt_disable))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_interrupt
</UL>

<P><STRONG><a name="[74]"></a>interrupt_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text.interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_camera_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_interrupt
</UL>

<P><STRONG><a name="[6c]"></a>interrupt_global_disable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text.interrupt_global_disable))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>

<P><STRONG><a name="[78]"></a>interrupt_global_enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text.interrupt_global_enable))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
</UL>

<P><STRONG><a name="[6b]"></a>interrupt_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zf_common_interrupt.o(.text.interrupt_init))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>

<P><STRONG><a name="[64]"></a>interrupt_set_priority</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, zf_common_interrupt.o(.text.interrupt_set_priority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = interrupt_set_priority
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[48]"></a>main</STRONG> (Thumb, 320 bytes, Stack size 16 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = main &rArr; mt9v03x_init &rArr; camera_init &rArr; timer_etr_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_gray_image
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_clear
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_set_priority
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7e]"></a>mt9v03x_get_version</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, zf_device_mt9v03x.o(.text.mt9v03x_get_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = mt9v03x_get_version &rArr; system_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[7b]"></a>mt9v03x_init</STRONG> (Thumb, 444 bytes, Stack size 40 bytes, zf_device_mt9v03x.o(.text.mt9v03x_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = mt9v03x_init &rArr; camera_init &rArr; timer_etr_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_delay
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_interrupt
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_camera_type
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_get_version
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>pit_init</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, zf_driver_pit.o(.text.pit_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = pit_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_funciton_check
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clock_enable
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>set_camera_type</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, zf_device_type.o(.text.set_camera_type))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[85]"></a>spi_write_16bit</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, zf_driver_spi.o(.text.spi_write_16bit))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_gray_image
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_clear
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_char
</UL>

<P><STRONG><a name="[50]"></a>spi_write_8bit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, zf_driver_spi.o(.text.spi_write_8bit))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_write_index
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_device_tft180.o(.text.tft180_set_region)
</UL>
<P><STRONG><a name="[4d]"></a>system_delay</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, zf_driver_delay.o(.text.system_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = system_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_get_version
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[7c]"></a>tft180_clear</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, zf_device_tft180.o(.text.tft180_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tft180_clear &rArr; tft180_set_region &rArr; tft180_write_index
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>tft180_show_char</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, zf_device_tft180.o(.text.tft180_show_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_string
</UL>

<P><STRONG><a name="[7d]"></a>tft180_show_gray_image</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, zf_device_tft180.o(.text.tft180_show_gray_image))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = tft180_show_gray_image &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_16bit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>tft180_show_string</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, zf_device_tft180.o(.text.tft180_show_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = tft180_show_string &rArr; tft180_show_char &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_char
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text.main)
</UL>
<P><STRONG><a name="[83]"></a>timer_clock_enable</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, zf_driver_timer.o(.text.timer_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_etr_init
</UL>

<P><STRONG><a name="[66]"></a>timer_etr_init</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, zf_driver_timer.o(.text.timer_etr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = timer_etr_init &rArr; debug_assert_handler &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_clock_enable
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_init
</UL>

<P><STRONG><a name="[82]"></a>timer_funciton_check</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zf_driver_timer.o(.text.timer_funciton_check))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pit_init
</UL>

<P><STRONG><a name="[5b]"></a>tsl1401_collect_pit_handler</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, zf_device_tsl1401.o(.text.tsl1401_collect_pit_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tsl1401_collect_pit_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_UP_IRQHandler
</UL>

<P><STRONG><a name="[72]"></a>uart_init</STRONG> (Thumb, 348 bytes, Stack size 16 bytes, zf_driver_uart.o(.text.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_init &rArr; afio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;afio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_init
</UL>

<P><STRONG><a name="[60]"></a>uart_query_byte</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zf_driver_uart.o(.text.uart_query_byte))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_uart_callback
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_uart_handler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_uart_callback
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_callback
</UL>

<P><STRONG><a name="[80]"></a>uart_rx_interrupt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, zf_driver_uart.o(.text.uart_rx_interrupt))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_enable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
</UL>

<P><STRONG><a name="[7f]"></a>uart_write_buffer</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, zf_driver_uart.o(.text.uart_write_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_write_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mt9v03x_get_version
</UL>

<P><STRONG><a name="[8b]"></a>uart_write_byte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, zf_driver_uart.o(.text.uart_write_byte))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_string
</UL>

<P><STRONG><a name="[73]"></a>uart_write_string</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, zf_driver_uart.o(.text.uart_write_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_write_string
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_uart_str_output
</UL>

<P><STRONG><a name="[5d]"></a>wireless_module_uart_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, zf_device_type.o(.text.wireless_module_uart_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wireless_module_uart_handler &rArr; bluetooth_ch9141_uart_callback &rArr; fifo_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bluetooth_ch9141_uart_callback
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_uart_callback
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>wireless_uart_callback</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, zf_device_wireless_uart.o(.text.wireless_uart_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wireless_uart_callback &rArr; fifo_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_write_buffer
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_query_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wireless_module_uart_handler
</UL>

<P><STRONG><a name="[8d]"></a>__0sprintf$3</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[9c]"></a>__1sprintf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)

<P><STRONG><a name="[6e]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_assert_handler
</UL>

<P><STRONG><a name="[9d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[9e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[9f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4b]"></a>debug_uart_str_output</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, zf_common_debug.o(.text.debug_uart_str_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = debug_uart_str_output &rArr; uart_write_string
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_string
</UL>
<BR>[Address Reference Count : 1]<UL><LI> zf_common_debug.o(.text.debug_init)
</UL>
<P><STRONG><a name="[84]"></a>tft180_set_region</STRONG> (Thumb, 308 bytes, Stack size 48 bytes, zf_device_tft180.o(.text.tft180_set_region))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = tft180_set_region &rArr; tft180_write_index
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_8bit
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_write_index
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_gray_image
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_clear
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_show_char
</UL>

<P><STRONG><a name="[86]"></a>tft180_write_index</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, zf_device_tft180.o(.text.tft180_write_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tft180_write_index
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write_8bit
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tft180_set_region
</UL>

<P><STRONG><a name="[8e]"></a>_printf_core</STRONG> (Thumb, 436 bytes, Stack size 96 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>

<P><STRONG><a name="[51]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf3.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0sprintf$3)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
